[workspace]
resolver = "2"
members = [
    "fuzz",
    "plugins/*",
    "stdx",
    "zi",
    "zi-core",
    "zi-indent",
    "zi-lsp",
    "zi-marktree",
    "zi-nvim",
    "zi-term",
    "zi-text",
    "zi-textobject",
    "zi-tui",
    "zi-wasm",
    "asciicast",
]

[workspace.dependencies]
asciicast = { path = "asciicast" }
zi = { path = "zi" }
zi-core = { path = "zi-core" }
zi-wasm = { path = "zi-wasm" }
zi-indent = { path = "zi-indent" }
zi-lsp = { path = "zi-lsp" }
zi-marktree = { path = "zi-marktree" }
zi-nvim = { path = "zi-nvim" }
zi-text = { path = "zi-text" }
zi-textobject = { path = "zi-textobject" }
zi-tui = { path = "zi-tui" }
bitflags = "2.5.0"
crop = { version = "0.4.2", features = ["graphemes", "utf16-metric"] }
stdx = { path = "stdx" }
arbitrary = { version = "1.3.2", features = ["derive"] }
rand = "0.8.5"
lsp-types = "0.95.0"
anyhow = "1.0.81"
arrayvec = "0.7.4"
async-trait = "0.1.80"
crossterm = "0.27.0"
divan = "0.1.14"
expect-test = "1.4.1"
proptest = "1.4.0"
futures-core = "0.3.30"
futures-executor = "0.3.30"
futures-util = "0.3.30"
itertools = "0.13"
measureme = "12"
mimalloc = "0.1.42"
parking_lot = "0.12.2"
regex = "1"
regex-cursor = { version = "0.1.4", default-features = false, features = ["perf-inline"] }
rustc-hash = "2"
slotmap = "1.0.7"
smallvec = "2.0.0-alpha.6"
tokio = { version = "1.37.0", default-features = false }
tokio-util = { version = "0.7.10", default-features = false }
tree-sitter = { version = "0.22.6" }
tracing = "0.1.40"
ustr = "1"
wit-bindgen = "0.24.0"
wit-bindgen-rt = "0.24.0"
dyn-clone = "1.0.17"
serde_json = "1.0.95"
mutants = "0.0.3"
test-strategy = "0.3.1"

[profile.dev.package.cranelift-codegen]
opt-level = 3

[profile.dev.package."*"]
opt-level = 1

[profile.bench]
debug = true

[profile.release]
debug = true

[workspace.lints.rust]
rust_2018_idioms = "deny"

[workspace.lints.rustdoc] # FIXME don't think this is working
broken_intra_doc_links = "warn"

[workspace.lints.clippy]
dbg_macro = "deny"
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
restriction = { level = "allow", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
print_stdout = "warn"
print_stderr = "warn"
rc_buffer = "warn"

[patch.crates-io]
crop = { git = "https://github.com/andyyu2004/crop", branch = "main" }
tree-sitter = { git = "https://github.com/tree-sitter/tree-sitter", branch = "master" }

